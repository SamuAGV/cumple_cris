<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Â¡Feliz CumpleaÃ±os!</title>
    <!-- LibrerÃ­as de animaciÃ³n -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.2/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/0.155.0/three.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@mojs/core"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: 'Comic Sans MS', cursive, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            overflow: hidden;
            background: linear-gradient(-45deg, #ff9a9e, #fad0c4, #fbc2eb, #a6c1ee);
            background-size: 400% 400%;
        }

        #canvas-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: 1;
        }

        .card {
            background-color: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
            padding: 35px;
            text-align: center;
            width: 90%;
            max-width: 500px;
            position: relative;
            z-index: 10;
            border: 1px solid rgba(255, 255, 255, 0.5);
        }

        h1 {
            color: #d81b60;
            margin-bottom: 20px;
            font-size: clamp(2rem, 5vw, 2.5rem);
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
            letter-spacing: 1px;
        }

        p {
            color: #555;
            font-size: clamp(1rem, 3vw, 1.2rem);
            margin-bottom: 30px;
            line-height: 1.6;
        }

        .cake {
            font-size: clamp(3.5rem, 10vw, 5rem);
            margin: 25px 0;
            cursor: pointer;
            display: inline-block;
            filter: drop-shadow(0 5px 15px rgba(0, 0, 0, 0.2));
            /* Aseguramos que el pastel siempre sea visible */
            opacity: 1 !important;
        }

        button {
            background: linear-gradient(135deg, #d81b60, #c2185b);
            color: white;
            border: none;
            padding: 14px 30px;
            font-size: clamp(0.9rem, 3vw, 1.1rem);
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s;
            margin-top: 25px;
            box-shadow: 0 5px 15px rgba(216, 27, 96, 0.4);
            font-weight: bold;
            letter-spacing: 1px;
            position: relative;
            overflow: hidden;
        }

        button:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(216, 27, 96, 0.5);
        }

        button:active {
            transform: translateY(1px);
        }

        .message {
            display: none;
            margin-top: 25px;
            font-weight: bold;
            color: #d81b60;
            font-size: clamp(1.1rem, 3vw, 1.3rem);
            padding: 15px;
            border-radius: 10px;
            background-color: rgba(255, 255, 255, 0.7);
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
        }

        .confetti {
            position: absolute;
            width: 15px;
            height: 15px;
            background-color: #f00;
            opacity: 0;
            z-index: 5;
        }

        .balloon {
            position: absolute;
            width: 40px;
            height: 50px;
            border-radius: 50%;
            opacity: 0.8;
            z-index: 5;
        }
    </style>
</head>
<body>
    <div id="canvas-container"></div>
    
    <div class="card" id="birthdayCard">
        <h1>Â¡Feliz CumpleaÃ±os!</h1>
        <p>Que este dÃ­a estÃ© lleno de alegrÃ­a, risas y mucha felicidad. Â¡Disfruta tu dÃ­a especial!</p>
        
        <div class="cake" id="cake">ðŸŽ‚</div>
        
        <p>Haz clic en el pastel para pedir un deseo</p>
        
        <div class="message" id="birthdayMessage"></div>
        
        <button id="celebrateBtn">Â¡Celebrar!</button>
    </div>

    <script>
        // ConfiguraciÃ³n de Three.js para el fondo
        let scene, camera, renderer;
        let particles = [];
        
        function initThreeJS() {
            scene = new THREE.Scene();
            camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
            renderer = new THREE.WebGLRenderer({ alpha: true });
            renderer.setSize(window.innerWidth, window.innerHeight);
            document.getElementById('canvas-container').appendChild(renderer.domElement);
            
            // Crear partÃ­culas flotantes
            const particleGeometry = new THREE.SphereGeometry(0.2, 8, 8);
            const particleMaterials = [
                new THREE.MeshBasicMaterial({ color: 0xff5252, transparent: true, opacity: 0.7 }),
                new THREE.MeshBasicMaterial({ color: 0x7c4dff, transparent: true, opacity: 0.7 }),
                new THREE.MeshBasicMaterial({ color: 0x40c4ff, transparent: true, opacity: 0.7 }),
                new THREE.MeshBasicMaterial({ color: 0xffab40, transparent: true, opacity: 0.7 }),
                new THREE.MeshBasicMaterial({ color: 0x69f0ae, transparent: true, opacity: 0.7 })
            ];
            
            for (let i = 0; i < 40; i++) {
                const particle = new THREE.Mesh(
                    particleGeometry, 
                    particleMaterials[Math.floor(Math.random() * particleMaterials.length)]
                );
                
                particle.position.x = Math.random() * 40 - 20;
                particle.position.y = Math.random() * 40 - 20;
                particle.position.z = Math.random() * 40 - 30;
                
                particle.velocity = {
                    x: Math.random() * 0.02 - 0.01,
                    y: Math.random() * 0.02 - 0.01,
                    z: Math.random() * 0.02 - 0.01
                };
                
                scene.add(particle);
                particles.push(particle);
            }
            
            camera.position.z = 5;
            
            animate();
        }
        
        function animate() {
            requestAnimationFrame(animate);
            
            // Actualizar posiciones de partÃ­culas
            particles.forEach(particle => {
                particle.position.x += particle.velocity.x;
                particle.position.y += particle.velocity.y;
                particle.position.z += particle.velocity.z;
                
                // Verificar lÃ­mites y rebotar
                if (Math.abs(particle.position.x) > 20) particle.velocity.x *= -1;
                if (Math.abs(particle.position.y) > 20) particle.velocity.y *= -1;
                if (Math.abs(particle.position.z) > 30) particle.velocity.z *= -1;
                
                particle.rotation.x += 0.01;
                particle.rotation.y += 0.01;
            });
            
            renderer.render(scene, camera);
        }
        
        // Manejar redimensionamiento de ventana
        window.addEventListener('resize', () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        });
        
        // Crear globos con Anime.js
        function createBalloons() {
            const colors = ['#ff5252', '#ff4081', '#e040fb', '#7c4dff', '#536dfe', '#448aff', '#40c4ff', '#18ffff', '#64ffda', '#69f0ae', '#b2ff59', '#eeff41', '#ffff00', '#ffd740', '#ffab40', '#ff6e40'];
            
            for (let i = 0; i < 20; i++) {
                const balloon = document.createElement('div');
                balloon.className = 'balloon';
                balloon.style.background = colors[Math.floor(Math.random() * colors.length)];
                balloon.style.left = Math.random() * 100 + 'vw';
                balloon.style.bottom = -60 + 'px';
                document.body.appendChild(balloon);
                
                // Animar globos con Anime.js
                anime({
                    targets: balloon,
                    translateY: -window.innerHeight - 100,
                    translateX: anime.random(-100, 100),
                    rotate: anime.random(-15, 15),
                    duration: anime.random(10000, 15000),
                    easing: 'easeOutCubic',
                    delay: anime.random(0, 5000),
                    complete: function() {
                        balloon.remove();
                    }
                });
            }
        }

        // Crear confeti con Mo.js
        function createConfetti() {
            const colors = ['#f44336', '#e91e63', '#9c27b0', '#673ab7', '#3f51b5', '#2196f3', '#03a9f4', '#00bcd4', '#009688', '#4CAF50', '#8BC34A', '#CDDC39', '#FFEB3B', '#FFC107', '#FF9800', '#FF5722'];
            
            // Crear confeti tradicional
            for (let i = 0; i < 100; i++) {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.background = colors[Math.floor(Math.random() * colors.length)];
                confetti.style.left = Math.random() * 100 + 'vw';
                confetti.style.top = -10 + 'px';
                confetti.style.transform = 'rotate(' + Math.random() * 360 + 'deg)';
                
                // Formas diferentes
                if (Math.random() > 0.5) {
                    confetti.style.borderRadius = '50%';
                } else {
                    confetti.style.width = '10px';
                    confetti.style.height = '20px';
                }
                
                document.body.appendChild(confetti);
                
                // AnimaciÃ³n del confeti
                setTimeout(() => {
                    confetti.style.opacity = '1';
                    confetti.style.top = '100vh';
                    confetti.style.left = Math.random() * 100 + 'vw';
                    confetti.style.transition = 'all ' + (Math.random() * 3 + 2) + 's linear';
                    
                    // Eliminar despuÃ©s de la animaciÃ³n
                    setTimeout(() => {
                        confetti.remove();
                    }, 5000);
                }, Math.random() * 1000);
            }
            
            // AÃ±adir explosiones de Mo.js
            for (let i = 0; i < 5; i++) {
                setTimeout(() => {
                    const burst = new mojs.Burst({
                        left: Math.random() * 100 + '%',
                        top: Math.random() * 50 + '%',
                        radius: { 0: 100 },
                        count: 15,
                        children: {
                            shape: ['circle', 'rect'][Math.floor(Math.random() * 2)],
                            fill: colors,
                            radius: { 8: 0 },
                            duration: 2000,
                            delay: 'stagger(50)'
                        }
                    });
                    
                    burst.play();
                }, i * 300);
            }
        }

        // Pedir un deseo
        function makeWish() {
            const messages = [
                "Â¡Que todos tus deseos se hagan realidad!",
                "Â¡Un aÃ±o mÃ¡s de aventuras increÃ­bles!",
                "Â¡Mucha salud y felicidad para ti!",
                "Â¡Que este aÃ±o supere al anterior!",
                "Â¡Disfruta cada momento de tu dÃ­a especial!"
            ];
            
            const messageElement = document.getElementById('birthdayMessage');
            messageElement.textContent = messages[Math.floor(Math.random() * messages.length)];
            messageElement.style.display = 'block';
            
            // Animar mensaje con GSAP
            gsap.fromTo("#birthdayMessage", 
                { opacity: 0, y: 20 },
                { opacity: 1, y: 0, duration: 0.5, ease: "back.out(1.7)" }
            );
            
            // Animar pastel con Anime.js
            anime({
                targets: '#cake',
                scale: [1, 1.2, 1],
                rotate: [0, 5, -5, 0],
                duration: 800,
                easing: 'easeInOutQuad'
            });
            
            // Crear destellos con Mo.js
            const sparkle = new mojs.Burst({
                parent: document.getElementById('cake'),
                radius: { 0: 100 },
                count: 10,
                children: {
                    shape: 'circle',
                    fill: { 'cyan': 'yellow' },
                    strokeWidth: 3,
                    duration: 1500
                }
            });
            
            sparkle.play();
        }

        // Celebrar - FunciÃ³n corregida
        function celebrate() {
            console.log("Â¡Celebrando!");
            
            // Crear confeti
            createConfetti();
            
            // Crear globos
            createBalloons();
            
            // Animar botÃ³n con GSAP
            gsap.to("#celebrateBtn", {
                backgroundColor: "#4CAF50",
                scale: 1.1,
                duration: 0.3,
                onComplete: () => {
                    document.getElementById('celebrateBtn').textContent = 'Â¡Woohoo! ðŸŽ‰';
                    
                    gsap.to("#celebrateBtn", {
                        backgroundColor: "#d81b60",
                        scale: 1,
                        delay: 2,
                        duration: 0.3,
                        onComplete: () => {
                            document.getElementById('celebrateBtn').textContent = 'Â¡Celebrar!';
                        }
                    });
                }
            });
            
            // Animar tarjeta con GSAP
            gsap.to("#birthdayCard", {
                boxShadow: "0 20px 50px rgba(216, 27, 96, 0.3)",
                duration: 0.5,
                yoyo: true,
                repeat: 1
            });
            
            // Animar pastel con Anime.js
            anime({
                targets: '#cake',
                scale: [1, 1.3, 1],
                rotate: [0, 10, -10, 0],
                duration: 1000,
                easing: 'easeInOutQuad'
            });
        }

        // Inicializar todo cuando la pÃ¡gina carga
        window.onload = function() {
            console.log("PÃ¡gina cargada");
            
            // Inicializar fondo de Three.js
            initThreeJS();
            
            // Asegurarnos de que el pastel sea visible inmediatamente
            document.getElementById('cake').style.opacity = "1";
            
            // Animar entrada de tarjeta con GSAP
            gsap.fromTo("#birthdayCard", 
                { opacity: 0, y: 50, scale: 0.9 },
                { opacity: 1, y: 0, scale: 1, duration: 1, ease: "back.out(1.7)" }
            );
            
            // Animar elementos de la tarjeta con GSAP
            gsap.fromTo("h1", 
                { opacity: 0, y: -20 },
                { opacity: 1, y: 0, duration: 0.8, delay: 0.3 }
            );
            
            gsap.fromTo("p", 
                { opacity: 0 },
                { opacity: 1, duration: 0.8, delay: 0.5, stagger: 0.2 }
            );
            
            // Asegurarnos de que el pastel aparezca correctamente
            gsap.set("#cake", { opacity: 1, scale: 1 });
            
            // Animar pastel con una animaciÃ³n mÃ¡s simple
            gsap.to("#cake", {
                y: -10,
                duration: 2,
                repeat: -1,
                yoyo: true,
                ease: "sine.inOut"
            });
            
            gsap.fromTo("button", 
                { opacity: 0, y: 20 },
                { opacity: 1, y: 0, duration: 0.8, delay: 0.9 }
            );
            
            // Animar fondo con GSAP
            gsap.to("body", {
                backgroundPosition: "100% 50%",
                duration: 15,
                repeat: -1,
                yoyo: true,
                ease: "sine.inOut"
            });
            
            // Configurar evento de clic en el pastel
            document.getElementById('cake').addEventListener('click', makeWish);
            
            // Configurar evento de clic en el botÃ³n de celebrar
            document.getElementById('celebrateBtn').addEventListener('click', celebrate);
            
            // Crear algunos globos iniciales
            setTimeout(createBalloons, 1500);
        }
    </script>
</body>
</html>